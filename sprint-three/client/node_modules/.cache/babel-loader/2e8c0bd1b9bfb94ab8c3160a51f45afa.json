{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/Desktop/BrainStation/Activities, Exercises and Projects/Brainflix/steven-martins-brainflix/sprint-two/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Video from \"./components/Video\";\nimport Description from \"./components/Description\";\nimport Comments from \"./components/Comments\";\nimport CommentsList from \"./components/CommentsList\";\nimport VideoList from \"./components/VideosList\"; // import uuid from \"uuid/v1\";\n\nimport axios from \"axios\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mainVideoDetails: {},\n      sideVideos: []\n    };\n    this.state = {\n      videos: [],\n      video: {}\n    };\n  }\n\n  // Set URL and key in a variable?\n  componentDidMount() {\n    axios.get(\"https://project-2-api.herokuapp.com/videos/1af0jruup5gu?api_key=87406025-19a3-40c6-88d5-0f1aeb285f89\").then(response => this.setState({\n      mainVideoDetails: response.data\n    })).catch(err => console.log(err));\n    axios.get(\"https://project-2-api.herokuapp.com/videos?api_key=87406025-19a3-40c6-88d5-0f1aeb285f89\").then(response => this.setState({\n      sideVideos: response.data\n    })).catch(err => console.log(err));\n  }\n\n  componentDidUpdate(prevProps) {\n    const oldVideoId = prevProps.match.params.id;\n    const newVideoId = this.props.match.params.id;\n\n    if (newVideoId === oldVideoId) {} else {\n      this.getPost(newVideoId);\n    }\n  }\n\n  getVideo() {\n    axios.get(\"https://project-2-api.herokuapp.com/videos?api_key=87406025-19a3-40c6-88d5-0f1aeb285f89\").then(response => {\n      this.setState({\n        video: response.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  getVideos() {\n    axios.get(\"https://project-2-api.herokuapp.com/videos?api_key=87406025-19a3-40c6-88d5-0f1aeb285f89\").then(response => {\n      this.setState({\n        videos: response.data\n      });\n    }).catch(err => console.log(err));\n  } //wrap main video content with link component to main video id?\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Video, {\n      mainVideo: this.state.mainVideoDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"wrapper-one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"wrapper-two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Description, {\n      mainVideo: this.state.mainVideoDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Comments, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CommentsList, {\n      mainVideo: this.state.mainVideoDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(VideoList, {\n      sideVideo: this.state.sideVideos.filter(video => video.id !== this.state.mainVideoDetails.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/Desktop/BrainStation/Activities, Exercises and Projects/Brainflix/steven-martins-brainflix/sprint-two/src/App.js"],"names":["React","Component","Header","Video","Description","Comments","CommentsList","VideoList","axios","App","state","mainVideoDetails","sideVideos","videos","video","componentDidMount","get","then","response","setState","data","catch","err","console","log","componentDidUpdate","prevProps","oldVideoId","match","params","id","newVideoId","props","getPost","getVideo","getVideos","render","filter"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Video from \"./components/Video\";\nimport Description from \"./components/Description\";\nimport Comments from \"./components/Comments\";\nimport CommentsList from \"./components/CommentsList\";\nimport VideoList from \"./components/VideosList\";\n\n// import uuid from \"uuid/v1\";\nimport axios from \"axios\";\n\nexport default class App extends Component {\n  //axios calls\n\n  state = {\n    mainVideoDetails: {},\n    sideVideos: [],\n  };\n\n  // Set URL and key in a variable?\n\n  componentDidMount() {\n    axios\n      .get(\n        \"https://project-2-api.herokuapp.com/videos/1af0jruup5gu?api_key=87406025-19a3-40c6-88d5-0f1aeb285f89\"\n      )\n      .then((response) =>\n        this.setState({\n          mainVideoDetails: response.data,\n        })\n      )\n      .catch((err) => console.log(err));\n    axios\n      .get(\n        \"https://project-2-api.herokuapp.com/videos?api_key=87406025-19a3-40c6-88d5-0f1aeb285f89\"\n      )\n      .then((response) =>\n        this.setState({\n          sideVideos: response.data,\n        })\n      )\n      .catch((err) => console.log(err));\n  }\n\n  state = {\n    videos: [],\n    video: {},\n  };\n  componentDidUpdate(prevProps) {\n    const oldVideoId = prevProps.match.params.id;\n    const newVideoId = this.props.match.params.id;\n    if (newVideoId === oldVideoId) {\n    } else {\n      this.getPost(newVideoId);\n    }\n  }\n\n  getVideo() {\n    axios\n      .get(\n        \"https://project-2-api.herokuapp.com/videos?api_key=87406025-19a3-40c6-88d5-0f1aeb285f89\"\n      )\n      .then((response) => {\n        this.setState({ video: response.data });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  getVideos() {\n    axios\n      .get(\n        \"https://project-2-api.herokuapp.com/videos?api_key=87406025-19a3-40c6-88d5-0f1aeb285f89\"\n      )\n      .then((response) => {\n        this.setState({ videos: response.data });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  //wrap main video content with link component to main video id?\n\n  render() {\n    return (\n      <>\n        <Header />\n\n        <Video mainVideo={this.state.mainVideoDetails} />\n        <section className=\"wrapper-one\">\n          <section className=\"wrapper-two\">\n            <Description mainVideo={this.state.mainVideoDetails} />\n\n            <Comments />\n            <CommentsList mainVideo={this.state.mainVideoDetails} />\n          </section>\n          <VideoList\n            sideVideo={this.state.sideVideos.filter(\n              (video) => video.id !== this.state.mainVideoDetails.id\n            )}\n          />\n        </section>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}