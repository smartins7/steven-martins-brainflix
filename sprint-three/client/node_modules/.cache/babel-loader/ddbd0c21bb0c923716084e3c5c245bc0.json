{"ast":null,"code":"//Timestamp Converter\n// const dateConvert = (date) => {\n//   let seconds = Math.floor((new Date() - date) / 1000);\n//   let intervalType; // placeholder for type of interval - year, month, day, hour, etc.\n//   let interval = Math.floor(seconds / 31536000);\n//   if (interval >= 1) {\n//     intervalType = \"year\"; // check if more than 1 year have passed\n//   } else {\n//     interval = Math.floor(seconds / 2592000);\n//     if (interval >= 1) {\n//       intervalType = \"month\"; // check if more than 1 month have passed\n//     } else {\n//       interval = Math.floor(seconds / 86400);\n//       if (interval >= 1) {\n//         intervalType = \"day\"; // check if more than 1 day have passed\n//       } else {\n//         interval = Math.floor(seconds / 3600);\n//         if (interval >= 1) {\n//           intervalType = \"hour\"; // check if more than 1 hour have passed\n//         } else {\n//           interval = Math.floor(seconds / 60);\n//           if (interval >= 1) {\n//             intervalType = \"minute\"; // check if more than 1 minute have passed\n//           } else {\n//             if (interval === 0) {\n//               interval = seconds;\n//               intervalType = \"second\";\n//             }\n//           }\n//         }\n//       }\n//     }\n//   }\n//   if (interval > 1 || interval === 0) {\n//     intervalType += \"s\";\n//   }\n//   return `${interval} ${intervalType} ago`;\n// };\nfunction dateConvert(UNIX_timestamp) {\n  const a = new Date(UNIX_timestamp * 1000);\n  const months = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n  const year = a.getFullYear();\n  const month = months[a.getMonth()];\n  const date = a.getDate();\n  const time = month + \"/\" + date + 1 + \"/\" + year / 2592000;\n  return time;\n}\n\nexport default dateConvert; // const dateConvert = response.data[i].timestamp;\n// let dateObject = new Date(dateConvert);\n// let formattedDate =\n//     dateObject.getMonth() +\n//     1 +\n//     \"/\" +\n//     dateObject.getDate() +\n//     \"/\" +\n//     dateObject.getFullYear();","map":{"version":3,"sources":["/Users/Steven/Desktop/BrainStation/Activities, Exercises and Projects/Brainflix/steven-martins-brainflix/sprint-two/src/components/Date.js"],"names":["dateConvert","UNIX_timestamp","a","Date","months","year","getFullYear","month","getMonth","date","getDate","time"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,SAASA,WAAT,CAAqBC,cAArB,EAAqC;AACnC,QAAMC,CAAC,GAAG,IAAIC,IAAJ,CAASF,cAAc,GAAG,IAA1B,CAAV;AACA,QAAMG,MAAM,GAAG,CACb,IADa,EAEb,IAFa,EAGb,IAHa,EAIb,IAJa,EAKb,IALa,EAMb,IANa,EAOb,IAPa,EAQb,IARa,EASb,IATa,EAUb,IAVa,EAWb,IAXa,EAYb,IAZa,CAAf;AAcA,QAAMC,IAAI,GAAGH,CAAC,CAACI,WAAF,EAAb;AACA,QAAMC,KAAK,GAAGH,MAAM,CAACF,CAAC,CAACM,QAAF,EAAD,CAApB;AACA,QAAMC,IAAI,GAAGP,CAAC,CAACQ,OAAF,EAAb;AACA,QAAMC,IAAI,GAAGJ,KAAK,GAAG,GAAR,GAAcE,IAAd,GAAqB,CAArB,GAAyB,GAAzB,GAA+BJ,IAAI,GAAG,OAAnD;AACA,SAAOM,IAAP;AACD;;AAED,eAAeX,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//Timestamp Converter\n\n// const dateConvert = (date) => {\n//   let seconds = Math.floor((new Date() - date) / 1000);\n//   let intervalType; // placeholder for type of interval - year, month, day, hour, etc.\n//   let interval = Math.floor(seconds / 31536000);\n//   if (interval >= 1) {\n//     intervalType = \"year\"; // check if more than 1 year have passed\n//   } else {\n//     interval = Math.floor(seconds / 2592000);\n//     if (interval >= 1) {\n//       intervalType = \"month\"; // check if more than 1 month have passed\n//     } else {\n//       interval = Math.floor(seconds / 86400);\n//       if (interval >= 1) {\n//         intervalType = \"day\"; // check if more than 1 day have passed\n//       } else {\n//         interval = Math.floor(seconds / 3600);\n//         if (interval >= 1) {\n//           intervalType = \"hour\"; // check if more than 1 hour have passed\n//         } else {\n//           interval = Math.floor(seconds / 60);\n//           if (interval >= 1) {\n//             intervalType = \"minute\"; // check if more than 1 minute have passed\n//           } else {\n//             if (interval === 0) {\n//               interval = seconds;\n//               intervalType = \"second\";\n//             }\n//           }\n//         }\n//       }\n//     }\n//   }\n\n//   if (interval > 1 || interval === 0) {\n//     intervalType += \"s\";\n//   }\n//   return `${interval} ${intervalType} ago`;\n// };\n\nfunction dateConvert(UNIX_timestamp) {\n  const a = new Date(UNIX_timestamp * 1000);\n  const months = [\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"10\",\n    \"11\",\n    \"12\",\n  ];\n  const year = a.getFullYear();\n  const month = months[a.getMonth()];\n  const date = a.getDate();\n  const time = month + \"/\" + date + 1 + \"/\" + year / 2592000;\n  return time;\n}\n\nexport default dateConvert;\n\n// const dateConvert = response.data[i].timestamp;\n// let dateObject = new Date(dateConvert);\n// let formattedDate =\n//     dateObject.getMonth() +\n//     1 +\n//     \"/\" +\n//     dateObject.getDate() +\n//     \"/\" +\n//     dateObject.getFullYear();\n"]},"metadata":{},"sourceType":"module"}